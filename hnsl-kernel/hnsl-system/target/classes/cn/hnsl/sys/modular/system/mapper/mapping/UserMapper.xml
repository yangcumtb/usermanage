<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hnsl.sys.modular.system.mapper.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.hnsl.sys.modular.system.entity.SysUser">
        <id column="user_id" property="userId"/>
        <result column="avatar" property="avatar"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="name" property="name"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="title" property="title"/>
        <result column="dept_id" property="deptId"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="version" property="version"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        user_id
        AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", title AS "title",name AS "name", birthday AS "birthday", sex AS "sex", email AS "email", phone AS "phone",  dept_id AS "deptId", status AS "status", create_time AS "createTime", create_user AS "createUser", update_time AS "updateTime", update_user AS "updateUser", version AS "version"
    </sql>

    <sql id="Base_Column_List_With_Pwd">
        u.user_id AS "userId", u.avatar AS "avatar", u.account AS "account", u.salt AS "salt",
        u.password AS "password", u.name AS "name", u.birthday AS "birthday", u.sex AS "sex",
        u.email AS "email", u.phone AS "phone", u.dept_id AS "deptId", u.status AS "status", u.title AS "title",
        u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS "updateUser", u.version AS "version"
    </sql>

    <select id="selectUsers" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%'||#{name,jdbcType=VARCHAR}||'%'
            or account like '%'||#{name,jdbcType=VARCHAR}||'%'
            or name like '%'||#{name,jdbcType=VARCHAR}||'%')
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like '%$['||#{deptId,jdbcType=VARCHAR}||'$]%' escape '$'))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (sys_user.create_time between  to_timestamp(CONCAT(#{beginTime}::text ,' 00:00:00'),'yyyy-MM-dd hh24:mi:ss') and  to_timestamp(CONCAT(#{endTime}::text,' 23:59:59'),'yyyy-MM-dd hh24:mi:ss'))
        </if>
    </select>

    <select id="selectOutCheckUsers" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where sys_user.status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%'||#{name,jdbcType=VARCHAR}||'%'
            or account like '%'||#{name,jdbcType=VARCHAR}||'%'
            or name like '%'||#{name,jdbcType=VARCHAR}||'%')
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like CONCAT('%$[',
            #{deptId}, '$]%') escape '$' ))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
        <if test="deptType != null and deptType != ''">
            and dept_id in(select dept_id from sys_dept where dept_type = #{deptType,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="pickerUsers" resultType="map">
        select
        <include refid="Base_Column_List"/>,IF (t.userId IS NOT NULL,1,0) AS LAY_CHECKED
        from sys_user u
        <if test="userList !=null and userList.length > 0">
            LEFT JOIN (
            SELECT user_id as userId FROM sys_user WHERE user_id IN
            <foreach collection="userList" item="_userId" open="(" separator="," close=")) t" index="index">
                #{_userId}
            </foreach>
            ON u.user_id = t.userId
        </if>

        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%'||#{name,jdbcType=VARCHAR}||'%'
            or account like '%'||#{name,jdbcType=VARCHAR}||'%'
            or name like '%'||#{name,jdbcType=VARCHAR}||'%')
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like CONCAT('%$[',
            #{deptId}, '$]%') escape '$' ))
        </if>
    </select>

    <select id="selectUsersByRole" resultType="map">
        select
        user_id AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", u.name AS "name", birthday AS
        "birthday"
        , sex AS "sex", email AS "email", phone AS "phone", u.role_id AS "roleId", dept_id AS "deptId", u.status AS
        "status"
        , u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS
        "updateUser", u.version AS "version"
        from sys_user u
        where u.status != 'DELETED'
        <if test="name != null and name != ''">
            and (u.phone like '%'||#{name,jdbcType=VARCHAR}||'%'
            or u.account like '%'||#{name,jdbcType=VARCHAR}||'%'
            or u.name like '%'||#{name,jdbcType=VARCHAR}||'%')
        </if>
        <if test="roleId != null and roleId != 0">
            and u.role_id like '%'||#{roleId,jdbcType=VARCHAR}||'%'
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (u.create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>


    <update id="setStatus">
        update sys_user
        set status = #{status}
        where user_id = #{userId}
    </update>

    <update id="changePwd">
        update sys_user
        set password = #{pwd}
        where user_id = #{userId}
    </update>

    <update id="setRoles">
        update sys_user
        set role_id = #{roleIds}
        where user_id =
              #{userId}
    </update>

    <select id="getByAccount" resultType="cn.hnsl.sys.modular.system.entity.SysUser">
        select
        <include refid="Base_Column_List_With_Pwd"/>,ad.ad_code as adCode,ad.ad_grad as adGrad
        from sys_user u
        left join sys_dept d on u.dept_id = d.dept_id
        left join base_admin ad on d.ad_code = ad.ad_code
        where account = #{account} and status != 'DELETED'
    </select>

    <select id="listUserAndRoleExpectAdmin" resultType="map">
        select sysUser.account     as account,
               sysUser.name        as name,
               dept.simple_name as simpleName
        from sys_user sysUser
        left join sys_dept dept
        on sysUser.dept_id = dept.dept_id
    </select>

    <select id="checkPhoneUnique" resultType="cn.hnsl.sys.modular.system.entity.SysUser">
        select user_id AS "userId", phone from sys_user where phone=#{phone} limit 1
    </select>
    <select id="queryAllUserIdList" resultType="java.lang.Long">
        select user_id AS "userId" from sys_user where status = 'ENABLE'
    </select>


</mapper>
